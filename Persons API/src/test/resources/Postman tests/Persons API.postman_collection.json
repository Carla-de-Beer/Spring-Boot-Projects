{
	"info": {
		"_postman_id": "cf3e3294-9dd3-4053-a3bf-a2ed6fe7902b",
		"name": "Persons API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all persons",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2575248c-8397-42b2-b862-0e1074db33df",
						"exec": [
							"postman.setGlobalVariable(\"personId\", pm.response.json()[0].id);",
							"",
							"function findJoe() {",
							"    for (var i = 0; i < pm.response.json().length; ++i) {",
							"       if (pm.response.json()[i].firstName === \"Joe\" && pm.response.json()[i].lastName == \"Green\") {",
							"           return pm.response.json()[i].id;",
							"       } ",
							"    }",
							"    return \"\";",
							"}",
							"",
							"postman.setGlobalVariable(\"joeGreenId\", findJoe());",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a person for a given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15ada4a0-01f1-40bb-abc6-891af70cdc29",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/{{personId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"{{personId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a person for a given id (person id not in the list)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15ada4a0-01f1-40bb-abc6-891af70cdc29",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/a1a1a1a1-a2a2-a3a3-a4a4-a5a5a5a5a5a5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"a1a1a1a1-a2a2-a3a3-a4a4-a5a5a5a5a5a5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the persons for a given color",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c024af0d-28dc-41c4-b87a-80877dd00f05",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/color/Green",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"color",
						"Green"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the persons for a given color (input check)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c024af0d-28dc-41c4-b87a-80877dd00f05",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/color/greEN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"color",
						"greEN"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the persons for a given color (color not present)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c024af0d-28dc-41c4-b87a-80877dd00f05",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/color/Orange",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"color",
						"Orange"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a person for a given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6a2e737-3a8b-45e3-b72c-334278f46368",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"firstName\": \"Joe\",\n        \"lastName\": \"Green\",\n        \"zipCode\": \"11068\",\n        \"city\": \"New York\",\n        \"colorName\": \"Purple\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/{{joeGreenId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"{{joeGreenId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new person entry",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6a2e737-3a8b-45e3-b72c-334278f46368",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\": \"Carmen\",\n\t\"lastName\": \"Redway\",\n\t\"zipCode\": \"75450\",\n\t\"city\": \"Phoenix\",\n\t\"colorName\": \"Red\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a person for a given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15ada4a0-01f1-40bb-abc6-891af70cdc29",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Check if target is an object\", function () { ",
							"    pm.expect({a: 1}).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/persons/{{personId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"persons",
						"{{personId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0e573364-e290-41e2-b744-9183a736a75c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3f9cdd92-5d6a-4009-8169-25eb39fd1156",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}